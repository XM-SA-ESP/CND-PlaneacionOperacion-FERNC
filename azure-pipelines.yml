trigger:
  branches:
    include:
      - "endy/deliveryTrain"
  paths:
    include:
      - $(System.DefaultWorkingDirectory)/XM_FERNC_API

variables:
  - group: GRU_VAR_XM_FERNC_PYTHON_API_PRB
  - name: projectPath
    value: XM_FERNC_API
  - name: manifestToNamespace
    value: -f $(System.DefaultWorkingDirectory)/Manifest/00-namespace.yml
  - name: manifestToDeployApp
    value: |
      -f $(System.DefaultWorkingDirectory)/Manifest/01-deployment.yml
      $(System.DefaultWorkingDirectory)/Manifest/02-service.yml

parameters:
  - name: deliveryTrain
    type: object
    default:
      continuousIntegration:
        pool: "Azure Pipelines"
        build:
          with: fastapi
          configure:
            buildConfiguration: "Release"
            workingDirectory: $(System.DefaultWorkingDirectory)/$(projectPath)
            tests:
              with: sonarqube
              configure:
                scannerMode: "CLI"
                projectKey: "XM.FERNC.SOLARWIND.API"
                projectName: "XM.FERNC.SOLARWIND.API"
                extraProperties: |
                  sonar.exclusions='**/*.bin
                  sonar.cs.opencover.reportsPaths=**/coverage.xml
        artifact:
          with: docker
          configure:
            serviceConnectionName: "SC_XM_ModelosFERNC_PRB-DockerRegistry"
            repository: "acrferncprb01-python"
            command: "buildAndPush"
            filePath: "$(System.DefaultWorkingDirectory)/$(projectPath)/Dockerfile"
            buildContext: "$(System.DefaultWorkingDirectory)/$(projectPath)/."
      continuousDelivery:
        pool: "Azure Pipelines"
        deployment:
          - name: "QA"
            groupVariable: GRU_VAR_XM_FERNC_PYTHON_API_PRB
            environment: ENV_XM_FERNC_PYTHON_API_PRB
            platform:
              with: aks
              configure:
                manifestToNamespace: $(manifestToNamespace)
                manifestsToDeployApp: $(manifestToDeployApp)
                serviceConnection: SC_XM_ModelosFERNC_PRB
          - name: "PRD"
            groupVariable: GRU_VAR_XM_FERNC_PYTHON_API_PRD
            environment: ENV_XM_FERNC_PYTHON_API_PRD
            platform:
              with: aks
              configure:
                manifestToNamespace: $(manifestToNamespace)
                manifestsToDeployApp: $(manifestToDeployApp)
                serviceConnection: SC_XM_FERNC_PRD_01
                docker:
                  serviceConnectionName: "SC_XM_FERBC_PRD_01_Docker_Registry"
                  repository: "acrferncprd01-python"
                  command: "buildAndPush"
                  filePath: "$(System.DefaultWorkingDirectory)/$(projectPath)/Dockerfile"
                  buildContext: "$(System.DefaultWorkingDirectory)/$(projectPath)/."

resources:
  repositories:
    - repository: templates
      type: git
      ref: main
      name: XM_FERNC_AZURE_PIPELINE_TEMPLATE

extends:
  template: templates/fastapi-aks.yaml@templates
  parameters:
    deliveryTrain: ${{ parameters.deliveryTrain }}
